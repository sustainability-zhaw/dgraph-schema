# This is the root query to fetch all proper counts
{   
    types(func: anyofterms(InfoObjectType.name, "publications modules projects")) {
        category: InfoObjectType.name
        objects: count(InfoObjectType.objects)
    }

    ot_pub as var(func: allofterms(InfoObjectType.name, "publications")) {
        InfoObjectType.name
    }

    sdg_pub(func: has(Sdg.objects)) {
        id: Sdg.id
        n: count(Sdg.objects @filter(uid_in(InfoObject.category, uid(ot_pub))))
    }

    dept_pub(func: has(Department.objects)) {
        id: Department.id
        n: count(Department.objects @filter(uid_in(InfoObject.category, uid(ot_pub))))
    }

    ot_edu as var(func: allofterms(InfoObjectType.name, "modules")) {
        InfoObjectType.name
    }

    sdg_edu(func: has(Sdg.objects)) {
        id: Sdg.id
        n: count(Sdg.objects @filter(uid_in(InfoObject.category, uid(ot_edu))))
    }

    dept_edu(func: has(Department.objects)) {
        id: Department.id
        n: count(Department.objects @filter(uid_in(InfoObject.category, uid(ot_edu))))
    }

    ot_prj as var(func: allofterms(InfoObjectType.name, "projects")) {
        InfoObjectType.name
    }

    sdg_prj(func: has(Sdg.objects)) {
        id: Sdg.id
        n: count(Sdg.objects @filter(uid_in(InfoObject.category, uid(ot_prj))))
    }

    dept_prj(func: has(Department.objects)) {
        id: Department.id
        n: count(Department.objects @filter(uid_in(InfoObject.category, uid(ot_prj))))
    }
}