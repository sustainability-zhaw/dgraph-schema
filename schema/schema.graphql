type InfoObject {
    title: String @search(by: [fulltext])
    authors: [ Person ]
    year: Int
    abstract: String @search(by: [fulltext])
    language: String
    link: String @id 
    extras: String @search(by: [fulltext])
    sdgs: [ SDG ] 
    keywords: [ Keyword ]
    class: [ PublicationClass ]
    subtype: InfoObjectType
}

type Person {
    name: String! @id  @search(by: [term])
    initials: String @id @search(by: [term])
    surname: String  @search(by: [term])
    givenname: String
    displayname: String
    gender: String
    title: String
    mail: String
    ipphone: String
    physicaldeliveryofficename: String
    team: Team
    directreports: [ Person ] @hasInverse(field: manager)
    manager: Person @hasInverse(field: directreports)
    department: Department
    publications: [ InfoObject ] @hasInverse(field: authors)
    LDAPDN: String @id
}

type Team {
    name: String @id @search(by: [term])
    staff: [ Person ] @hasInverse(field: team)
}

type InfoObjectType { 
    name: String! @id @search(by: [term])
    objects: [ InfoObject ] @hasInverse(field: subtype)
}

type SDG { 
    sdg: Int! @id
    name: String 
    objects: [ InfoObject ] @hasInverse(field: sdgs)
}

type Department {
    name: String! @id @search(by: [term])
    title: String
    persons: [ Person ]
}

type PublicationClass { 
    id: String @id
    name: String
    Objects: [ InfoObject ] @hasInverse(field: class)
}

type Keyword {
    name: String! @id
    Objects: [ InfoObject ] @hasInverse(field: keywords)
}
