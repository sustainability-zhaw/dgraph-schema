enum eDepartment {
    department_A
    department_G
    department_L
    department_N
    department_P
    department_S
    department_T
    department_W
    department_R
    department_V
}

enum eSdg {
    sdg_1
    sdg_2
    sdg_3
    sdg_4
    sdg_5
    sdg_6
    sdg_7
    sdg_8
    sdg_9
    sdg_10
    sdg_11
    sdg_12
    sdg_13
    sdg_14
    sdg_15
    sdg_16
    sdg_17
}

type Sdg {
    id: eSdg @search
    objects: [InfoObject] @hasInverse(field: sdgs) 
}

type Department {
    id: eDepartment @search
    objects: [InfoObject] @hasInverse(field: departments) 
    persons: [Person] @hasInverse(field: department)
}

type InfoObject {
    title: String @search(by: [fulltext])
    persons: [ Person ] 
    year: Int @search 
    abstract: String @search(by: [fulltext])
    language: String
    link: String! @id @search(by: [exact])
    extras: String @search(by: [fulltext])
    sdgs: [ Sdg ] 
    keywords: [ Keyword ]
    class: [ PublicationClass ]
    subtype: InfoObjectType 
    category: InfoObjectType
    departments: [Department]
}

type Person {
    fullname: String! @id @search(by: [term])
    initials: String @search(by: [exact])
    surname: String  @search(by: [term])
    givenname: String
    displayname: String
    gender: String
    title: String
    mail: String
    ipphone: String
    physicaldeliveryofficename: String
    team: Team
    directreports: [ Person ] @hasInverse(field: manager)
    manager: Person @hasInverse(field: directreports)
    department: Department
    objects: [ InfoObject ] @hasInverse(field: persons)
    LDAPDN: String @search(by: [exact])
}

type Team {
    name: String! @id @search(by: [term])
    staff: [ Person ] @hasInverse(field: team)
}

type InfoObjectType { 
    name: String! @id @search(by: [exact])
    objects: [ InfoObject ] @hasInverse(field: subtype)
}

type PublicationClass { 
    id: String! @id @search
    name: String @search(by: [term])
    objects: [ InfoObject ] @hasInverse(field: class)
}

type Keyword {
    name: String! @id @search(by: [term])
    objects: [ InfoObject ] @hasInverse(field: keywords)
}
